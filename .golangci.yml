# GolangCI-Lint configuration for state-of-the-art Go projects
run:
  timeout: 5m
  issues-exit-code: 1
  tests: true
  skip-dirs:
    - vendor
    - .git
    - node_modules
  skip-files:
    - ".*\\.pb\\.go$"
    - ".*_generated\\.go$"

output:
  format: colored-line-number
  print-issued-lines: true
  print-linter-name: true

linters-settings:
  # Enable aggressive linting for best practices
  errcheck:
    check-type-assertions: true
    check-blank: true
    exclude-functions:
      - fmt.Printf
      - fmt.Println
      - fmt.Print
      - fmt.Fprintf

  govet:
    check-shadowing: true
    enable-all: true

  goimports:
    local-prefixes: github.com/m/configtoggle

  gocyclo:
    min-complexity: 10

  dupl:
    threshold: 100

  goconst:
    min-len: 3
    min-occurrences: 3

  misspell:
    locale: US

  unparam:
    check-exported: true

  nakedret:
    max-func-lines: 30

  prealloc:
    simple: true
    range-loops: true
    for-loops: false

  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - dupImport
      - ifElseChain
      - octalLiteral
      - wrapperFunc

  funlen:
    lines: 100
    statements: 50

  gocognit:
    min-complexity: 15

  nestif:
    min-complexity: 4

  lll:
    line-length: 120

  whitespace:
    multi-if: false
    multi-func: false

  wsl:
    strict-append: true
    allow-assign-and-call: true
    allow-multiline-assign: true
    allow-cuddle-declarations: false
    allow-trailing-comment: false
    force-case-trailing-whitespace: 0

  godox:
    keywords:
      - NOTE
      - OPTIMIZE
      - HACK

  depguard:
    rules:
      main:
        deny:
          - pkg: "github.com/pkg/errors"
            desc: "use standard errors package or golang.org/x/xerrors"
          - pkg: "github.com/sirupsen/logrus"
            desc: "use structured logging with zerolog"

  revive:
    min-confidence: 0
    rules:
      - name: atomic
      - name: line-length-limit
        arguments: [120]
      - name: argument-limit
        arguments: [8]
      - name: cyclomatic
        arguments: [15]
      - name: max-public-structs
        arguments: [10]
      - name: file-header
        arguments:
          - ""

  gosec:
    includes:
      - G401
      - G501
      - G502
    excludes:
      - G104
    exclude-generated: true
    severity: "low"
    confidence: "low"
    config:
      G306: "0644"

linters:
  enable:
    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    - containedctx
    - contextcheck
    - cyclop
    - decorder
    - depguard
    - dogsled
    - dupl
    - dupword
    - durationcheck
    - errcheck
    - errchkjson
    - errname
    - errorlint
    - execinquery
    - exhaustive
    - exhaustruct
    - exportloopref
    - forbidigo
    - forcetypeassert
    - funlen
    - gci
    - ginkgolinter
    - gocheckcompilerdirectives
    - gochecknoinits
    - gochecksumtype
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - godot
    - godox
    - gofmt
    - gofumpt
    - goheader
    - goimports
    - gomnd
    - gomoddirectives
    - gomodguard
    - goprintffuncname
    - gosec
    - gosimple
    - gosmopolitan
    - govet
    - grouper
    - importas
    - ineffassign
    - interfacebloat
    - ireturn
    - lll
    - loggercheck
    - maintidx
    - makezero
    - mirror
    - misspell
    - musttag
    - nakedret
    - nestif
    - nilerr
    - nilnil
    - nlreturn
    - noctx
    - nolintlint
    - nonamedreturns
    - nosprintfhostport
    - paralleltest
    - prealloc
    - predeclared
    - promlinter
    - reassign
    - revive
    - rowserrcheck
    - sqlclosecheck
    - staticcheck
    - stylecheck
    - tagalign
    - tagliatelle
    - tenv
    - testableexamples
    - testpackage
    - thelper
    - tparallel
    - typecheck
    - unconvert
    - unparam
    - unused
    - usestdlibvars
    - varnamelen
    - wastedassign
    - whitespace
    - wrapcheck
    - wsl
    - zerologlint

  disable:
    - gochecknoglobals # Allow globals for CLI applications
    - exhaustruct # Too restrictive for this project
    - varnamelen # Allow short variable names in appropriate contexts

issues:
  exclude-use-default: false
  exclude:
    # Exclude some linters from running on tests files
    - "Error return value of .((os\\.)?std(out|err)\\..*|.*Close|.*Flush|os\\.Remove(All)?|.*print(f|ln)?|os\\.(Un)?Setenv). is not checked"
    - "should not use dot imports"
    - "cyclomatic complexity .* of func .* is high"
    - "G304: Potential file inclusion via variable"
    
  exclude-rules:
    - path: _test\.go
      linters:
        - gomnd
        - gocritic
        - funlen
        - dupl
        - wrapcheck
        - errorlint
    
    - path: cmd/
      linters:
        - gochecknoinits
        
    - path: internal/
      linters:
        - gochecknoglobals

    - linters:
        - lll
      source: "^//go:generate "

  fix: true
  new: false
  new-from-rev: ""
  new-from-patch: ""