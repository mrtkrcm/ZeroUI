# golangci-lint configuration
# See: https://golangci-lint.run/usage/configuration/

run:
  timeout: 5m
  tests: true
  modules-download-mode: readonly
  allow-parallel-runners: true

output:
  format: colored-line-number
  print-issued-lines: true
  print-linter-name: true
  uniq-by-line: true
  sort-results: true

linters-settings:
  # Cyclomatic complexity
  cyclop:
    max-complexity: 15
    package-average: 10.0
    skip-tests: false

  # Duplication detection
  dupl:
    threshold: 100

  # Error checks
  errcheck:
    check-type-assertions: true
    check-blank: true
    exclude-functions:
      - io/ioutil.ReadFile
      - io.Copy(*bytes.Buffer)
      - io.Copy(os.Stdout)

  # Function length
  funlen:
    lines: 80
    statements: 50

  # Cognitive complexity
  gocognit:
    min-complexity: 15

  # Code quality
  goconst:
    min-len: 3
    min-occurrences: 3
    ignore-tests: false

  # Critical issues
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - dupImport # https://github.com/go-critic/go-critic/issues/845
      - ifElseChain
      - octalLiteral
      - whyNoLint
      - wrapperFunc

  # gofmt settings
  gofmt:
    simplify: true

  # goimports settings
  goimports:
    local-prefixes: github.com/mrtkrcm/ZeroUI

  # Line length
  lll:
    line-length: 120

  # Misspell
  misspell:
    locale: US

  # Naming conventions
  revive:
    severity: warning
    rules:
      - name: exported
        severity: warning
        disabled: false
        arguments:
          - "checkPrivateReceivers"
          - "sayRepetitiveInsteadOfStutters"

  # Security
  gosec:
    severity: medium
    confidence: medium
    excludes:
      - G204 # Subprocess launched with variable
      - G304 # File path provided as taint input

  # Unused code
  unused:
    check-exported: false

  # Whitespace
  whitespace:
    multi-if: false
    multi-func: false

  # Testing
  testpackage:
    skip-regexp: (export|internal)_test\.go

linters:
  enable:
    # Core Go linters
    - errcheck
    - gosimple
    - govet
    - ineffassign
    - staticcheck
    - typecheck
    - unused

    # Code quality
    - dupl
    - gocognit
    - goconst
    - gocritic
    - gofmt
    - goimports
    - gosec
    - misspell
    - revive
    - unconvert
    - unparam
    - whitespace

    # Performance
    - prealloc

    # Style
    - gofumpt
    - godox
    - nolintlint

    # Testing
    - testpackage

    # Bugs
    - bodyclose
    - exportloopref
    - rowserrcheck
    - sqlclosecheck

    # Complexity
    - cyclop
    - funlen
    - lll

  disable:
    - exhaustive
    - exhaustivestruct
    - forcetypeassert
    - godot
    - gomnd
    - interfacer
    - maligned
    - nlreturn
    - scopelint
    - wsl

issues:
  exclude-use-default: false
  exclude-rules:
    # Exclude some linters from running on tests files
    - path: _test\.go
      linters:
        - dupl
        - funlen
        - gocognit
        - gosec
        - lll

    # Ignore complexity in main package
    - path: main\.go
      linters:
        - gocognit
        - funlen

    # Ignore long lines in generated files
    - path: \.pb\.go$
      linters:
        - lll

    # Ignore errors in migrations
    - path: migrations/
      linters:
        - errcheck

  max-issues-per-linter: 0
  max-same-issues: 0

severity:
  default-severity: error
  case-sensitive: false
  rules:
    - linters:
        - dupl
        - funlen
        - lll
      severity: warning