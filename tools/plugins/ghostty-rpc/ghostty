#!/usr/bin/env bash
# ghostty - fake placeholder executable for tests
#
# Minimal no-op fake for `ghostty` used in tests.
# Supports a couple of common invocations used by the project:
#   - +list-fonts / list-fonts          (prints a small list of fonts)
#   - --version / -v                    (prints a fake version)
#   - --help / help / -h                (prints brief help)
#
# For any other command this script is intentionally benign: it prints
# nothing and exits 0 so test harnesses that only check for command
# presence succeed without needing the real binary.
#
# To use locally, make this file executable:
#   chmod +x zeroui/tools/plugins/ghostty-rpc/ghostty
#
set -euo pipefail

prog="$(basename "$0")"

print_help() {
  cat <<EOF
${prog} - fake placeholder for ghostty used in tests

Usage:
  ${prog} [command]

Supported commands (fake):
  +list-fonts, list-fonts   Print a short list of common monospaced fonts
  --version, -v             Print fake version
  --help, -h, help          Show this help

This is a minimal no-op stub; unknown commands succeed silently.
EOF
}

print_fonts() {
  # A short, deterministic list used by tests / config parsing heuristics
  cat <<'FONTLIST'
JetBrains Mono
Fira Code
SF Mono
Monaco
DejaVu Sans Mono
Hack
Source Code Pro
Cascadia Code
FONTLIST
}

# No arguments => help
if [ $# -eq 0 ]; then
  print_help
  exit 0
fi

case "$1" in
  +list-fonts|list-fonts|+list_fonts|list_fonts)
    print_fonts
    exit 0
    ;;
  --version|-v)
    printf 'ghostty (fake) 0.0.0\n'
    exit 0
    ;;
  --help|-h|help)
    print_help
    exit 0
    ;;
  *)
    # Be permissive: many extractor/test flows simply exec the binary with
    # various args. We choose to be non-fatal and exit 0.
    # If a caller expects stdout, they should use the specific supported subcommands.
    exit 0
    ;;
esac
